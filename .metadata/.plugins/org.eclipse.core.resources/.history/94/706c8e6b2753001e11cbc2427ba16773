/*
 * uart.c
 *
 *  Created on: Sep 8, 2023
 *      Author: phamv
 */

#include "uart.h"

uint8_t receive_buffer1 = 0, receive_buffer3 = 0;
uint8_t msg[100];

void uart_init(){
	HAL_GPIO_WritePin(RS485_EN_GPIO_Port, RS485_EN_Pin, 0);
	HAL_UART_Receive_IT(&huart1, &receive_buffer1, 1);
	HAL_UART_Receive_IT(&huart3, &receive_buffer3, 1);
}

void uart_SendString(UART_HandleTypeDef *huart, uint8_t* str){
	HAL_UART_Transmit(huart, (void*)msg, sprintf((void*)msg,"%s",str), 10);
}

void uart_SendBytes(UART_HandleTypeDef *huart, uint8_t* bytes, uint16_t size){
	HAL_UART_Transmit(huart, bytes, size, 10);
}

void uart_SendNum(UART_HandleTypeDef *huart, uint32_t num){
    uint8_t num_flag = 0;
    int i;
	if(num < 0) uart_SendString(&huart1, "-");
    for(i = 10; i > 0; i--)
    {
        if((num / mypow(10, i-1)) != 0)
        {
            num_flag = 1;
            sprintf((void*)msg,"%d",num/mypow(10, i-1));
            uart_SendString(&huart1,msg);
        }
        else
        {
            if(num_flag != 0)
            	uart_SendString(&huart1, "0");
        }
        num %= mypow(10, i-1);
    }
}

void uart_SendNumPercent(UART_HandleTypeDef *huart,uint32_t num)
{
	sprintf((void*)msg,"%ld",num/100);
    uart_SendString(&huart1, msg);
    uart_SendString(&huart1, (void*)".");
    sprintf((void*)msg,"%ld",num%100);
    uart_SendString(&huart1, msg);
}

void rs485_SendString(uint8_t* str){
	HAL_GPIO_WritePin(RS485_EN_GPIO_Port, RS485_EN_Pin, 1);
	HAL_UART_Transmit(&huart3, (void*)msg, sprintf((void*)msg,"%s",str), 10);
	HAL_GPIO_WritePin(RS485_EN_GPIO_Port, RS485_EN_Pin, 0);
}

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
	if(huart->Instance == USART1){
		HAL_UART_Transmit(&huart1, &receive_buffer1, 1, 10);
		HAL_UART_Receive_IT(&huart1, &receive_buffer1, 1);
	}
	if(huart->Instance == USART3){
		HAL_UART_Transmit(&huart3, &receive_buffer3, 1, 10);
		HAL_UART_Receive_IT(&huart3, &receive_buffer3, 1);
	}
}
